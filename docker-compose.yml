version: '3'
services:
  server: ## express server 
    build: 
      context: ./server
      dockerfile: server.dockerfile
    ports:
      - "5000:5000"
    environment:
      - PORT=5000 
    depends_on:
      - mongo
      - socket
  mongo: ## mongo db
    image: mongo:latest
    ports:
      - "27017:27017"
  frontend: ## react app
    build:
      context: ./clientside
      dockerfile: frontend.dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
    depends_on:
      - server 
      - socket
  socket:  ## socket.io server
    build: 
      context: ./socket
      dockerfile: socket.dockerfile
    ports:
      - "8800:8800"
  nginx: ## nginx server
    build: 
      context: ./nginx
      dockerfile: nginx.dockerfile
    ports:
      - "80:80"
      - "443:443" ## not sure if this is needed
    volumes:
      - ./certs:/etc/nginx/certs
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - certbot-www:/var/www/certbot
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - server
      - frontend
      - socket
    environment:
       - NGINX_PORT=80
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'" # nginx reloads the newly obtained certificates
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done;'"
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - certbot-www:/var/www/certbot
    depends_on:
      - nginx
volumes:
  certbot-etc:
  certbot-var:
  certbot-www:








#  nginx:
#     container_name: nginx-devops
#     build: ./nginx
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./certs:/etc/nginx/certs
#       - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#       - certbot-etc:/etc/letsencrypt
#       - certbot-var:/var/lib/letsencrypt
#       - certbot-www:/var/www/certbot
#     depends_on:
#       - devops
#     environment: 
#       - NGINX_HOST=nginx-devops
#       - NGINX_PORT=80
  
#   certbot:
#     image: certbot/certbot
#     entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done;'"
#     volumes:
#       - certbot-etc:/etc/letsencrypt
#       - certbot-var:/var/lib/letsencrypt
#       - certbot-www:/var/www/certbot
#     depends_on:
#       - nginx

# volumes:
#   mysql-data:
#   certbot-etc:
#   certbot-var:
#   certbot-www:











## the original without certbot: 
# version: '3'
# services:
#   server: ## express server 
#     build: 
#       context: ./server
#       dockerfile: server.dockerfile
#     ports:
#       - "5000:5000"
#     environment:
#       - PORT=5000 
#     depends_on:
#       - mongo
#       - socket
#   mongo: ## mongo db
#     image: mongo:latest
#     ports:
#       - "27017:27017"
#   frontend: ## react app
#     build:
#       context: ./clientside
#       dockerfile: frontend.dockerfile
#     ports:
#       - "3000:3000"
#     environment:
#       - PORT=3000
#     depends_on:
#       - server 
#       - socket
#   socket:  ## socket.io server
#     build: 
#       context: ./socket
#       dockerfile: socket.dockerfile
#     ports:
#       - "8800:8800"
#   nginx: ## nginx server
#     build: 
#       context: ./nginx
#       dockerfile: nginx.dockerfile
#     ports:
#       - "80:80"
#       - "443:443" ## not sure if this is needed
#     volumes:
#       - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#     depends_on:
#       - server
#       - frontend
#       - socket
#     environment:
#        - NGINX_PORT=80

